name: Build, Version, & Push EntryTracker

permissions:
  contents: write

on:
  workflow_dispatch:    # allows manual runs
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Grab your code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Python & install dependencies
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 3. Smoke-test your app via HTTP
      - name: Start app in background
        run: nohup python app.py &

      - name: Smoke-test HTTP
        run: |
          sleep 5
          curl --fail http://localhost:5000/

      # 4. Version bump (patch)
      - name: Bump patch version
        id: bump
        run: |
          CURRENT=$(cat version.txt)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT"
          PATCH=$((PATCH + 1))
          NEW="${MAJOR}.${MINOR}.${PATCH}"
          echo "$NEW" > version.txt
          echo "new_version=$NEW" >> $GITHUB_OUTPUT

      - name: Commit version bump
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: "CI: bump version to ${{ steps.bump.outputs.new_version }}"
          file_pattern: version.txt
          branch: main

      # 5. Package into Docker image with the new version tag
      - name: Build Docker image
        run: |
          docker build \
             -t entrytracker:${{ steps.bump.outputs.new_version }} \
             .
         # the step below is after i got ECR    
   #         -t ${{ secrets.ECR_REPOSITORY }}:${{ steps.bump.outputs.new_version }} \
   #         .

      # 6. Authenticate with ECR
   #    - name: Login to ECR
   #      env:
   #        AWS_REGION: ${{ secrets.AWS_REGION }}
   #      run: |
   #        aws ecr get-login-password \
   #          --region $AWS_REGION \
   #        | docker login \
   #          --username AWS \
   #        --password-stdin ${{ secrets.ECR_REPOSITORY }}

   #   # 7. Push the versioned image to ECR
   #   - name: Push image to ECR
   #     run: |
   #       docker push ${{ secrets.ECR_REPOSITORY }}:${{ steps.bump.outputs.new_version }}
